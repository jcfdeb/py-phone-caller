version: "3.9"

# To bring up the containers: docker-compose --env-file .env-compose up
#   * Detached mode: docker-compose --env-file .env-compose up -d
#
# To stop all the containers: docker-compose --env-file .env-compose down
#
# Warning: create the 'pgdata' volume the first time before run this file
#          'podman volume create pgdata'

# Use a pre-existing network
networks:
  default:
    external: true
    name: py-phone-caller

services:
  postgres_13:
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=SWaaDvuf9zemkoCkkFhyo0HWx9zWApluiI9JS0
    image: docker.io/library/postgres:13.3-alpine3.14
    networks:
      frontend:
        ipv4_address: 172.19.0.50
    volumes:
      - pgdata:/var/lib/postgresql/data
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  asterisk_ws_monitor:
    depends_on:
      - postgres_13
    image: quay.io/py-phone-caller/asterisk_ws_monitor:0.0.1
    extra_hosts:
      - postgres-service:172.19.0.50
    volumes:
      - type: bind
        source: /opt/py-phone-caller/config/caller_config.toml
        target: /opt/py-phone-caller/config/caller_config.toml
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  asterisk_call:
    depends_on:
      - asterisk_call_register
      - generate_audio
    image: quay.io/py-phone-caller/asterisk_call:0.0.1
    volumes:
      - type: bind
        source: /opt/py-phone-caller/config/caller_config.toml
        target: /opt/py-phone-caller/config/caller_config.toml
    ports:
      - "8081:8081"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  asterisk_recall:
    depends_on:
      - asterisk_ws_monitor
      - asterisk_call
    image: quay.io/py-phone-caller/asterisk_recall:0.0.1
    extra_hosts:
      - postgres-service:172.19.0.50
    volumes:
      - type: bind
        source: /opt/py-phone-caller/config/caller_config.toml
        target: /opt/py-phone-caller/config/caller_config.toml
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  asterisk_call_register:
    depends_on:
      - asterisk_ws_monitor
    image: quay.io/py-phone-caller/call_register:0.0.1
    extra_hosts:
      - postgres-service:172.19.0.50
    volumes:
      - type: bind
        source: /opt/py-phone-caller/config/caller_config.toml
        target: /opt/py-phone-caller/config/caller_config.toml
    ports:
      - "8080:8080"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  caller_prometheus_webhook:
    depends_on:
      - caller_sms
      - asterisk_call
    image: quay.io/py-phone-caller/caller_prometheus_webhook:0.0.1
    volumes:
      - type: bind
        source: /opt/py-phone-caller/config/caller_config.toml
        target: /opt/py-phone-caller/config/caller_config.toml
    ports:
      - "8084:8084"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  caller_sms:
    image: quay.io/py-phone-caller/caller_sms:0.0.1
    volumes:
      - type: bind
        source: /opt/py-phone-caller/config/caller_config.toml
        target: /opt/py-phone-caller/config/caller_config.toml
    ports:
      - "8085:8085"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  generate_audio:
    depends_on:
      - asterisk_ws_monitor
    image: quay.io/py-phone-caller/generate_audio:0.0.1
    volumes:
      - type: bind
        source: /opt/py-phone-caller/config/caller_config.toml
        target: /opt/py-phone-caller/config/caller_config.toml
    ports:
      - "8082:8082"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

